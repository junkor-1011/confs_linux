# Package Magager
[[plugins]]
repo = 'Shougo/dein.vim'


# UI, search
# [[plugins]]
# repo = 'Shougo/denite.nvim'
# hook_add = '''
# source ~/.config/nvim/plugins_dein/denite.vim
# '''

[[plugins]]
repo = 'junegunn/fzf'
build = './install --bin'
#build_on = '''
#./install -all
#'''

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'fzf'

[[plugins]]
repo = 'mileszs/ack.vim'

[[plugins]]
repo = 'will133/vim-dirdiff'

# terminal
[[plugins]]
repo = "shougo/deol.nvim"
hook_add = """
source ~/.config/nvim/plugins_dein/deol.vim
"""

## Themes, StatusLine, Visualization

# statusline plugin
# [[plugins]]
# repo = 'itchyny/lightline.vim'

[[plugins]]
repo = 'vim-airline/vim-airline'
depends = ['vim-airline-themes']
hook_add = '''
source ~/.config/nvim/plugins_dein/vim-airline.vim
" default theme: dark
let g:airline_theme = 'dark'
"let g:airline_theme = 'molokai'
" let g:airline_powerline_fonts = 1
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

## colorscheme
#[[plugins]]
#repo = 'joshdick/onedark.vim'
#hook_add = '''
#colorscheme onedark
#'''

### colored bracket
[[plugins]]
repo = 'luochen1990/rainbow'

# File Tree

[[plugins]]
repo = 'ryanoasis/vim-devicons'

# launch
# [[plugins]]
# repo = 'thinca/vim-quickrun'

# [[plugins]]
# repo = 'lambdalisue/vim-quickrun-neovim-job'
# hook_add = '''
# let g:quickrun_config = {'_': {}}

# if has('nvim')
#   " Use 'neovim_job' in Neovim
#   let g:quickrun_config._.runner = 'neovim_job'
# elseif exists('*ch_close_in')
#   " Use 'job' in Vim which support job feature
#   let g:quickrun_config._.runner = 'job'
# endif
# '''

# Git
[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
nmap ]g <Plug>(GitGutterNextHunk)
nmap [g <Plug>(GitGutterPrevHunk)
'''

[[plugins]]
repo = 'tpope/vim-fugitive'

# editor utils

## block
[[plugins]]
repo = 'tpope/vim-endwise'

## Search
[[plugins]]
repo = 'osyo-manga/vim-anzu'
hook_add = '''
source ~/.config/nvim/plugins_dein/anzu.vim
'''

## visual expand
[[plugins]]
repo = 'terryma/vim-expand-region'
hook_add = '''
vmap v <Plug>(expand_region_expand)
vmap <C-v> <Plug>(expand_region_shrink)
'''

## tab
#[[plugins]]
#repo = 'ervandew/supertab'

## repeat
[[plugins]]
repo = 'tpope/vim-repeat'

## surround
[[plugins]]
repo = 'tpope/vim-surround'

## bracket
[[plugins]]
repo = 'Townk/vim-autoclose'

[[plugins]]
repo = 'jiangmiao/auto-pairs'

## HTML, XML, ...
[[plugins]]
repo = 'alvan/vim-closetag'

[[plugins]]
repo = 'mattn/emmet-vim'

## trailing-whitespace
[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

## syntax
[[plugins]]
repo = 'sheerun/vim-polyglot'

## Syntax checker
[[plugins]]
repo = 'dense-analysis/ale'
hook_add = '''
source ~/.config/nvim/plugins_dein/ale.vim
'''

# https://github.com/vim-syntastic/syntastic
# [[plugins]]
# repo = 'scrooloose/syntastic'

## mark, tag
[[plugins]]
repo = 'szw/vim-tags'

[[plugins]]
repo = 'majutsushi/tagbar'
hook_add = '''
" TMP
nmap <F8> :TagbarToggle<CR>
'''

# errorが出るがとりあえず無視
[[plugins]]
# repo = 'liuchengxu/vista.vim'
# hook_add = '''
# source ~/.config/nvim/plugins_dein/vista.vim
# '''

[[plugins]]
repo = 'jacquesbh/vim-showmarks'

### https://qiita.com/lighttiger2505/items/6b1cd3bc79cb9806a743
[[plugins]]
repo = 'lighttiger2505/gtags.vim'
hook_add = '''
    " Options
    let g:Gtags_Auto_Map = 0
    let g:Gtags_OpenQuickfixWindow = 1
    " Keymap
    " Show definetion of function cousor word on quickfix
    nmap <silent> K :<C-u>exe("Gtags ".expand('<cword>'))<CR>
    " Show reference of cousor word on quickfix
    nmap <silent> R :<C-u>exe("Gtags -r ".expand('<cword>'))<CR>
'''
[[plugins]]
repo = 'jsfaint/gen_tags.vim'
hook_add = '''
    let g:gen_tags#gtags_auto_gen = 1
'''

# 一旦disableにしておく
# [[plugins]]
# repo = 'ozelentok/denite-gtags'
# hook_add = '''
#     " Prefix key
#     nmap [denite] <Nop>
#     map <C-j> [denite]
#     " Keymap
#     nmap <silent> [denite]<C-D> :Denite -buffer-name=gtags_completion gtags_completion<cr>
# '''


# snippet
# [[plugins]]
# repo = 'Shougo/neosnippet-snippets'


# repo = 'thomasfaingnaert/vim-lsp-snippets'
# hook_add = '''
# source ~/.config/nvim/plugins_dein/vim-lsp-setting.vim
# '''

# [[plugins]]
# repo = 'thomasfaingnaert/vim-lsp-neosnippet'

# Gundo
[[plugins]]
repo = 'sjl/gundo.vim'
hook_add = '''
let g:gundo_prefer_python3 = 1
nnoremap <Leader><F5> :GundoToggle<CR>
'''

# DEBUG
# TMP
# [[plugins]]
# repo = 'vim-vdebug/vdebug'

# LSP

# vim-lsp
[[plugins]]
repo = 'prabirshrestha/async.vim'

# [[plugins]]
# repo = 'prabirshrestha/vim-lsp'
# hook_add = '''
# source ~/.config/nvim/plugins_dein/vim-lsp.vim
# '''

# [[plugins]]
# repo = 'mattn/vim-lsp-settings'
# hook_add = '''
# source ~/.config/nvim/plugins_dein/vim-lsp-setting.vim
# '''

# [[plugins]]
# repo = 'mattn/vim-lsp-icons'

# [[plugins]]
# repo = 'hrsh7th/vim-vsnip'
# merged = 0
# hook_add = '''
# source ~/.config/nvim/plugins_dein/vim-vsnip.vim
# '''

# [[plugins]]
# repo = 'hrsh7th/vim-vsnip-integ'

# [[plugins]]
# repo = 'tsuyoshicho/vim-efm-langserver-settings'
# depends = ['vim-lsp']


# tabnine (AI)
# [[plugins]]
# repo = 'codota/tabnine-vim'

# DEBUG
# need to create `$PROJECT_DIR/.vimspector.json`
# [[plugins]]
# repo = 'puremourning/vimspector'
# # on_ft = ["python", "javascript", "sh", "bash"]
# build = "./install_gadget.py --enable-python --enable-bash --force-enable-chrome"
# hook_add = '''
# source ~/.config/nvim/plugins_dein/vimspector.vim
# '''



# Others ------

[[plugins]]
repo = 'junegunn/goyo.vim'
