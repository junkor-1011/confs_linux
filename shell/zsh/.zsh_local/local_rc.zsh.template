
# homebrew
if [ "$(uname -s)" = "Darwin" ]; then
    # ToDo: for MacOS setting
    :
elif [ "$(uname -s)" = "Linux" ]; then
    if [ -d /home/linuxbrew/.linuxbrew ]; then
        export HOMEBREW_PREFIX=/home/linuxbrew/.linuxbrew
    elif [ -d $HOME/.linuxbrew ]; then
        export HOMEBREW_PREFIX=$HOME/.linuxbrew
    fi
    # set ENV
    if [ -n "$HOMEBREW_PREFIX" ]; then
        # using `$HOMEBREW_PREFIX/bin/brew shellenv`
        # export PATH=$HOMEBREW_PREFIX/bin:$PATH
        export HOMEBREW_CELLAR="${HOMEBREW_PREFIX}/Cellar"
        export HOMEBREW_REPOSITORY="${HOMEBREW_PREFIX}/Homebrew"
        export PATH="${HOMEBREW_PREFIX}/bin:${HOMEBREW_PREFIX}/sbin${PATH+:$PATH}"
        export MANPATH="${HOMEBREW_PREFIX}/share/man${MANPATH+:$MANPATH}:"
        export INFOPATH="${HOMEBREW_PREFIX}/share/info:${INFOPATH:-}"

        # completion
        FPATH=$HOMEBREW_PREFIX/share/zsh/site-functions:$FPATH
        autoload -Uz compinit
        compinit

        # alias to prevent from conflict between homebrew and pyenv
        alias brew="PATH=${HOMEBREW_PREFIX}/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin brew"
    fi
fi

# anyenv
if [ -d $HOME/.anyenv ]; then
    # export ANYENV_ROOT="$(anyenv root)"
    export PATH="$HOME/.anyenv/bin:$PATH"
    eval "$(anyenv init -)"

    # pyenv
    if [ -d $(anyenv root)/envs/pyenv ]; then
        eval "$(pyenv init -)"
        eval "$(pyenv virtualenv-init -)"
        source $(pyenv root)/completions/pyenv.zsh
    fi

    # nodenv
    if [ -d $(anyenv root)/envs/nodenv ]; then
        eval "$(nodenv init -)"
    fi
else
    # pyenv
    if [ -d $HOME/.pyenv ]; then
        export PYENV_ROOT="$HOME/.pyenv"
        export PATH="$PYENV_ROOT/bin:$PATH"
        eval "$(pyenv init -)"
        eval "$(pyenv virtualenv-init -)"
        source $(pyenv root)/completions/pyenv.zsh
    fi
fi

